# this is an auto generated file. This will be overwritten
mutation CreatePlants(
  $input: CreatePlantsInput!
  $condition: ModelPlantsConditionInput
) {
  createPlants(input: $input, condition: $condition) {
    id
    name
    description
    plantId
    country
    state
    image
    label
    field
    searchTerm
    zipCode
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdatePlants(
  $input: UpdatePlantsInput!
  $condition: ModelPlantsConditionInput
) {
  updatePlants(input: $input, condition: $condition) {
    id
    name
    description
    plantId
    country
    state
    image
    label
    field
    searchTerm
    zipCode
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeletePlants(
  $input: DeletePlantsInput!
  $condition: ModelPlantsConditionInput
) {
  deletePlants(input: $input, condition: $condition) {
    id
    name
    description
    plantId
    country
    state
    image
    label
    field
    searchTerm
    zipCode
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateActionsLogHistory(
  $input: CreateActionsLogHistoryInput!
  $condition: ModelActionsLogHistoryConditionInput
) {
  createActionsLogHistory(input: $input, condition: $condition) {
    id
    message
    type
    username
    actionslistID
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateActionsLogHistory(
  $input: UpdateActionsLogHistoryInput!
  $condition: ModelActionsLogHistoryConditionInput
) {
  updateActionsLogHistory(input: $input, condition: $condition) {
    id
    message
    type
    username
    actionslistID
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteActionsLogHistory(
  $input: DeleteActionsLogHistoryInput!
  $condition: ModelActionsLogHistoryConditionInput
) {
  deleteActionsLogHistory(input: $input, condition: $condition) {
    id
    message
    type
    username
    actionslistID
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateActionsList(
  $input: CreateActionsListInput!
  $condition: ModelActionsListConditionInput
) {
  createActionsList(input: $input, condition: $condition) {
    id
    actionsLogHistories {
      nextToken
      startedAt
    }
    actionId
    actionData
    taskId
    taskDesciption
    searchTerm
    createdBy
    roundId
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateActionsList(
  $input: UpdateActionsListInput!
  $condition: ModelActionsListConditionInput
) {
  updateActionsList(input: $input, condition: $condition) {
    id
    actionsLogHistories {
      nextToken
      startedAt
    }
    actionId
    actionData
    taskId
    taskDesciption
    searchTerm
    createdBy
    roundId
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteActionsList(
  $input: DeleteActionsListInput!
  $condition: ModelActionsListConditionInput
) {
  deleteActionsList(input: $input, condition: $condition) {
    id
    actionsLogHistories {
      nextToken
      startedAt
    }
    actionId
    actionData
    taskId
    taskDesciption
    searchTerm
    createdBy
    roundId
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateIssuesLogHistory(
  $input: CreateIssuesLogHistoryInput!
  $condition: ModelIssuesLogHistoryConditionInput
) {
  createIssuesLogHistory(input: $input, condition: $condition) {
    id
    message
    type
    username
    issueslistID
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateIssuesLogHistory(
  $input: UpdateIssuesLogHistoryInput!
  $condition: ModelIssuesLogHistoryConditionInput
) {
  updateIssuesLogHistory(input: $input, condition: $condition) {
    id
    message
    type
    username
    issueslistID
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteIssuesLogHistory(
  $input: DeleteIssuesLogHistoryInput!
  $condition: ModelIssuesLogHistoryConditionInput
) {
  deleteIssuesLogHistory(input: $input, condition: $condition) {
    id
    message
    type
    username
    issueslistID
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateIssuesList(
  $input: CreateIssuesListInput!
  $condition: ModelIssuesListConditionInput
) {
  createIssuesList(input: $input, condition: $condition) {
    id
    issuesLogHistories {
      nextToken
      startedAt
    }
    issueId
    issueData
    taskId
    taskDesciption
    notificationNumber
    searchTerm
    createdBy
    roundId
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateIssuesList(
  $input: UpdateIssuesListInput!
  $condition: ModelIssuesListConditionInput
) {
  updateIssuesList(input: $input, condition: $condition) {
    id
    issuesLogHistories {
      nextToken
      startedAt
    }
    issueId
    issueData
    taskId
    taskDesciption
    notificationNumber
    searchTerm
    createdBy
    roundId
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteIssuesList(
  $input: DeleteIssuesListInput!
  $condition: ModelIssuesListConditionInput
) {
  deleteIssuesList(input: $input, condition: $condition) {
    id
    issuesLogHistories {
      nextToken
      startedAt
    }
    issueId
    issueData
    taskId
    taskDesciption
    notificationNumber
    searchTerm
    createdBy
    roundId
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateUnitMeasument(
  $input: CreateUnitMeasumentInput!
  $condition: ModelUnitMeasumentConditionInput
) {
  createUnitMeasument(input: $input, condition: $condition) {
    id
    description
    symbol
    isDefault
    isDeleted
    unitlistID
    searchTerm
    unitList {
      id
      name
      isDeleted
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    isActive
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateUnitMeasument(
  $input: UpdateUnitMeasumentInput!
  $condition: ModelUnitMeasumentConditionInput
) {
  updateUnitMeasument(input: $input, condition: $condition) {
    id
    description
    symbol
    isDefault
    isDeleted
    unitlistID
    searchTerm
    unitList {
      id
      name
      isDeleted
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    isActive
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteUnitMeasument(
  $input: DeleteUnitMeasumentInput!
  $condition: ModelUnitMeasumentConditionInput
) {
  deleteUnitMeasument(input: $input, condition: $condition) {
    id
    description
    symbol
    isDefault
    isDeleted
    unitlistID
    searchTerm
    unitList {
      id
      name
      isDeleted
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    isActive
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateUnitList(
  $input: CreateUnitListInput!
  $condition: ModelUnitListConditionInput
) {
  createUnitList(input: $input, condition: $condition) {
    id
    name
    isDeleted
    unitMeasuments {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateUnitList(
  $input: UpdateUnitListInput!
  $condition: ModelUnitListConditionInput
) {
  updateUnitList(input: $input, condition: $condition) {
    id
    name
    isDeleted
    unitMeasuments {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteUnitList(
  $input: DeleteUnitListInput!
  $condition: ModelUnitListConditionInput
) {
  deleteUnitList(input: $input, condition: $condition) {
    id
    name
    isDeleted
    unitMeasuments {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateAssets(
  $input: CreateAssetsInput!
  $condition: ModelAssetsConditionInput
) {
  createAssets(input: $input, condition: $condition) {
    id
    name
    description
    model
    parentType
    parentId
    assetsId
    image
    searchTerm
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateAssets(
  $input: UpdateAssetsInput!
  $condition: ModelAssetsConditionInput
) {
  updateAssets(input: $input, condition: $condition) {
    id
    name
    description
    model
    parentType
    parentId
    assetsId
    image
    searchTerm
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteAssets(
  $input: DeleteAssetsInput!
  $condition: ModelAssetsConditionInput
) {
  deleteAssets(input: $input, condition: $condition) {
    id
    name
    description
    model
    parentType
    parentId
    assetsId
    image
    searchTerm
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateLocation(
  $input: CreateLocationInput!
  $condition: ModelLocationConditionInput
) {
  createLocation(input: $input, condition: $condition) {
    id
    name
    description
    model
    locationId
    parentId
    image
    searchTerm
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateLocation(
  $input: UpdateLocationInput!
  $condition: ModelLocationConditionInput
) {
  updateLocation(input: $input, condition: $condition) {
    id
    name
    description
    model
    locationId
    parentId
    image
    searchTerm
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteLocation(
  $input: DeleteLocationInput!
  $condition: ModelLocationConditionInput
) {
  deleteLocation(input: $input, condition: $condition) {
    id
    name
    description
    model
    locationId
    parentId
    image
    searchTerm
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateRoundPlanSubmissionDetails(
  $input: CreateRoundPlanSubmissionDetailsInput!
  $condition: ModelRoundPlanSubmissionDetailsConditionInput
) {
  createRoundPlanSubmissionDetails(input: $input, condition: $condition) {
    id
    formData
    formsubmissionlistID
    flatHierarchy
    createdBy
    assignedBy
    status
    formdetailID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateRoundPlanSubmissionDetails(
  $input: UpdateRoundPlanSubmissionDetailsInput!
  $condition: ModelRoundPlanSubmissionDetailsConditionInput
) {
  updateRoundPlanSubmissionDetails(input: $input, condition: $condition) {
    id
    formData
    formsubmissionlistID
    flatHierarchy
    createdBy
    assignedBy
    status
    formdetailID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteRoundPlanSubmissionDetails(
  $input: DeleteRoundPlanSubmissionDetailsInput!
  $condition: ModelRoundPlanSubmissionDetailsConditionInput
) {
  deleteRoundPlanSubmissionDetails(input: $input, condition: $condition) {
    id
    formData
    formsubmissionlistID
    flatHierarchy
    createdBy
    assignedBy
    status
    formdetailID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateRoundPlanSubmissionList(
  $input: CreateRoundPlanSubmissionListInput!
  $condition: ModelRoundPlanSubmissionListConditionInput
) {
  createRoundPlanSubmissionList(input: $input, condition: $condition) {
    id
    name
    description
    formLogo
    isPublic
    location
    roundType
    status
    assignee
    dueDate
    version
    submittedBy
    searchTerm
    roundPlanSubmissionDetails {
      nextToken
      startedAt
    }
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateRoundPlanSubmissionList(
  $input: UpdateRoundPlanSubmissionListInput!
  $condition: ModelRoundPlanSubmissionListConditionInput
) {
  updateRoundPlanSubmissionList(input: $input, condition: $condition) {
    id
    name
    description
    formLogo
    isPublic
    location
    roundType
    status
    assignee
    dueDate
    version
    submittedBy
    searchTerm
    roundPlanSubmissionDetails {
      nextToken
      startedAt
    }
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteRoundPlanSubmissionList(
  $input: DeleteRoundPlanSubmissionListInput!
  $condition: ModelRoundPlanSubmissionListConditionInput
) {
  deleteRoundPlanSubmissionList(input: $input, condition: $condition) {
    id
    name
    description
    formLogo
    isPublic
    location
    roundType
    status
    assignee
    dueDate
    version
    submittedBy
    searchTerm
    roundPlanSubmissionDetails {
      nextToken
      startedAt
    }
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateAuthoredRoundPlanDetail(
  $input: CreateAuthoredRoundPlanDetailInput!
  $condition: ModelAuthoredRoundPlanDetailConditionInput
) {
  createAuthoredRoundPlanDetail(input: $input, condition: $condition) {
    id
    formStatus
    version
    pages
    counter
    formDetailPublishStatus
    formlistID
    subForms
    hierarchy
    flatHierarchy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateAuthoredRoundPlanDetail(
  $input: UpdateAuthoredRoundPlanDetailInput!
  $condition: ModelAuthoredRoundPlanDetailConditionInput
) {
  updateAuthoredRoundPlanDetail(input: $input, condition: $condition) {
    id
    formStatus
    version
    pages
    counter
    formDetailPublishStatus
    formlistID
    subForms
    hierarchy
    flatHierarchy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteAuthoredRoundPlanDetail(
  $input: DeleteAuthoredRoundPlanDetailInput!
  $condition: ModelAuthoredRoundPlanDetailConditionInput
) {
  deleteAuthoredRoundPlanDetail(input: $input, condition: $condition) {
    id
    formStatus
    version
    pages
    counter
    formDetailPublishStatus
    formlistID
    subForms
    hierarchy
    flatHierarchy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateRoundPlanDetail(
  $input: CreateRoundPlanDetailInput!
  $condition: ModelRoundPlanDetailConditionInput
) {
  createRoundPlanDetail(input: $input, condition: $condition) {
    id
    formData
    flatHierarchy
    formlistID
    scheduledAt
    scheduledType
    dueDate
    createdBy
    assignedBy
    assignedTo
    roundPlanSubmissionDetails {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateRoundPlanDetail(
  $input: UpdateRoundPlanDetailInput!
  $condition: ModelRoundPlanDetailConditionInput
) {
  updateRoundPlanDetail(input: $input, condition: $condition) {
    id
    formData
    flatHierarchy
    formlistID
    scheduledAt
    scheduledType
    dueDate
    createdBy
    assignedBy
    assignedTo
    roundPlanSubmissionDetails {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteRoundPlanDetail(
  $input: DeleteRoundPlanDetailInput!
  $condition: ModelRoundPlanDetailConditionInput
) {
  deleteRoundPlanDetail(input: $input, condition: $condition) {
    id
    formData
    flatHierarchy
    formlistID
    scheduledAt
    scheduledType
    dueDate
    createdBy
    assignedBy
    assignedTo
    roundPlanSubmissionDetails {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateRoundPlanList(
  $input: CreateRoundPlanListInput!
  $condition: ModelRoundPlanListConditionInput
) {
  createRoundPlanList(input: $input, condition: $condition) {
    id
    name
    description
    formLogo
    isPublic
    publishedDate
    location
    roundType
    formStatus
    assignee
    tags
    lastPublishedBy
    author
    isArchived
    formType
    isArchivedAt
    authoredRoundPlanDetails {
      nextToken
      startedAt
    }
    roundPlanDetails {
      nextToken
      startedAt
    }
    isDeleted
    searchTerm
    createdBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateRoundPlanList(
  $input: UpdateRoundPlanListInput!
  $condition: ModelRoundPlanListConditionInput
) {
  updateRoundPlanList(input: $input, condition: $condition) {
    id
    name
    description
    formLogo
    isPublic
    publishedDate
    location
    roundType
    formStatus
    assignee
    tags
    lastPublishedBy
    author
    isArchived
    formType
    isArchivedAt
    authoredRoundPlanDetails {
      nextToken
      startedAt
    }
    roundPlanDetails {
      nextToken
      startedAt
    }
    isDeleted
    searchTerm
    createdBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteRoundPlanList(
  $input: DeleteRoundPlanListInput!
  $condition: ModelRoundPlanListConditionInput
) {
  deleteRoundPlanList(input: $input, condition: $condition) {
    id
    name
    description
    formLogo
    isPublic
    publishedDate
    location
    roundType
    formStatus
    assignee
    tags
    lastPublishedBy
    author
    isArchived
    formType
    isArchivedAt
    authoredRoundPlanDetails {
      nextToken
      startedAt
    }
    roundPlanDetails {
      nextToken
      startedAt
    }
    isDeleted
    searchTerm
    createdBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateResponseSet(
  $input: CreateResponseSetInput!
  $condition: ModelResponseSetConditionInput
) {
  createResponseSet(input: $input, condition: $condition) {
    id
    type
    name
    description
    isMultiColumn
    values
    createdBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateResponseSet(
  $input: UpdateResponseSetInput!
  $condition: ModelResponseSetConditionInput
) {
  updateResponseSet(input: $input, condition: $condition) {
    id
    type
    name
    description
    isMultiColumn
    values
    createdBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteResponseSet(
  $input: DeleteResponseSetInput!
  $condition: ModelResponseSetConditionInput
) {
  deleteResponseSet(input: $input, condition: $condition) {
    id
    type
    name
    description
    isMultiColumn
    values
    createdBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateFormSubmissionDetail(
  $input: CreateFormSubmissionDetailInput!
  $condition: ModelFormSubmissionDetailConditionInput
) {
  createFormSubmissionDetail(input: $input, condition: $condition) {
    id
    formData
    formsubmissionlistID
    createdBy
    assignedBy
    formdetailID
    status
    flatHierarchy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateFormSubmissionDetail(
  $input: UpdateFormSubmissionDetailInput!
  $condition: ModelFormSubmissionDetailConditionInput
) {
  updateFormSubmissionDetail(input: $input, condition: $condition) {
    id
    formData
    formsubmissionlistID
    createdBy
    assignedBy
    formdetailID
    status
    flatHierarchy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteFormSubmissionDetail(
  $input: DeleteFormSubmissionDetailInput!
  $condition: ModelFormSubmissionDetailConditionInput
) {
  deleteFormSubmissionDetail(input: $input, condition: $condition) {
    id
    formData
    formsubmissionlistID
    createdBy
    assignedBy
    formdetailID
    status
    flatHierarchy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateAuthoredFormDetail(
  $input: CreateAuthoredFormDetailInput!
  $condition: ModelAuthoredFormDetailConditionInput
) {
  createAuthoredFormDetail(input: $input, condition: $condition) {
    id
    formStatus
    version
    pages
    counter
    formDetailPublishStatus
    formlistID
    subForms
    hierarchy
    flatHierarchy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateAuthoredFormDetail(
  $input: UpdateAuthoredFormDetailInput!
  $condition: ModelAuthoredFormDetailConditionInput
) {
  updateAuthoredFormDetail(input: $input, condition: $condition) {
    id
    formStatus
    version
    pages
    counter
    formDetailPublishStatus
    formlistID
    subForms
    hierarchy
    flatHierarchy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteAuthoredFormDetail(
  $input: DeleteAuthoredFormDetailInput!
  $condition: ModelAuthoredFormDetailConditionInput
) {
  deleteAuthoredFormDetail(input: $input, condition: $condition) {
    id
    formStatus
    version
    pages
    counter
    formDetailPublishStatus
    formlistID
    subForms
    hierarchy
    flatHierarchy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateFormSubmissionList(
  $input: CreateFormSubmissionListInput!
  $condition: ModelFormSubmissionListConditionInput
) {
  createFormSubmissionList(input: $input, condition: $condition) {
    id
    name
    description
    formLogo
    isPublic
    location
    roundType
    status
    assignee
    dueDate
    version
    submittedBy
    searchTerm
    formSubmissionListFormSubmissionDetail {
      nextToken
      startedAt
    }
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateFormSubmissionList(
  $input: UpdateFormSubmissionListInput!
  $condition: ModelFormSubmissionListConditionInput
) {
  updateFormSubmissionList(input: $input, condition: $condition) {
    id
    name
    description
    formLogo
    isPublic
    location
    roundType
    status
    assignee
    dueDate
    version
    submittedBy
    searchTerm
    formSubmissionListFormSubmissionDetail {
      nextToken
      startedAt
    }
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteFormSubmissionList(
  $input: DeleteFormSubmissionListInput!
  $condition: ModelFormSubmissionListConditionInput
) {
  deleteFormSubmissionList(input: $input, condition: $condition) {
    id
    name
    description
    formLogo
    isPublic
    location
    roundType
    status
    assignee
    dueDate
    version
    submittedBy
    searchTerm
    formSubmissionListFormSubmissionDetail {
      nextToken
      startedAt
    }
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateFormList(
  $input: CreateFormListInput!
  $condition: ModelFormListConditionInput
) {
  createFormList(input: $input, condition: $condition) {
    id
    name
    description
    formLogo
    isPublic
    publishedDate
    location
    roundType
    formStatus
    assignee
    tags
    lastPublishedBy
    author
    formType
    isArchived
    searchTerm
    isArchivedAt
    formListAuthoredFormDetail {
      nextToken
      startedAt
    }
    formListFormDetail {
      nextToken
      startedAt
    }
    isDeleted
    createdBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateFormList(
  $input: UpdateFormListInput!
  $condition: ModelFormListConditionInput
) {
  updateFormList(input: $input, condition: $condition) {
    id
    name
    description
    formLogo
    isPublic
    publishedDate
    location
    roundType
    formStatus
    assignee
    tags
    lastPublishedBy
    author
    formType
    isArchived
    searchTerm
    isArchivedAt
    formListAuthoredFormDetail {
      nextToken
      startedAt
    }
    formListFormDetail {
      nextToken
      startedAt
    }
    isDeleted
    createdBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteFormList(
  $input: DeleteFormListInput!
  $condition: ModelFormListConditionInput
) {
  deleteFormList(input: $input, condition: $condition) {
    id
    name
    description
    formLogo
    isPublic
    publishedDate
    location
    roundType
    formStatus
    assignee
    tags
    lastPublishedBy
    author
    formType
    isArchived
    searchTerm
    isArchivedAt
    formListAuthoredFormDetail {
      nextToken
      startedAt
    }
    formListFormDetail {
      nextToken
      startedAt
    }
    isDeleted
    createdBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateFormDetail(
  $input: CreateFormDetailInput!
  $condition: ModelFormDetailConditionInput
) {
  createFormDetail(input: $input, condition: $condition) {
    id
    formData
    formlistID
    createdBy
    assignedBy
    flatHierarchy
    scheduledAt
    scheduledType
    dueDate
    assignedTo
    formSubmissionDetail {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateFormDetail(
  $input: UpdateFormDetailInput!
  $condition: ModelFormDetailConditionInput
) {
  updateFormDetail(input: $input, condition: $condition) {
    id
    formData
    formlistID
    createdBy
    assignedBy
    flatHierarchy
    scheduledAt
    scheduledType
    dueDate
    assignedTo
    formSubmissionDetail {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteFormDetail(
  $input: DeleteFormDetailInput!
  $condition: ModelFormDetailConditionInput
) {
  deleteFormDetail(input: $input, condition: $condition) {
    id
    formData
    formlistID
    createdBy
    assignedBy
    flatHierarchy
    scheduledAt
    scheduledType
    dueDate
    assignedTo
    formSubmissionDetail {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
