# this is an auto generated file. This will be overwritten
query GetPlants($id: ID!) {
  getPlants(id: $id) {
    id
    name
    description
    plantId
    country
    state
    image
    label
    field
    searchTerm
    zipCode
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListPlants(
  $filter: ModelPlantsFilterInput
  $limit: Int
  $nextToken: String
) {
  listPlants(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      description
      plantId
      country
      state
      image
      label
      field
      searchTerm
      zipCode
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncPlants(
  $filter: ModelPlantsFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncPlants(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      description
      plantId
      country
      state
      image
      label
      field
      searchTerm
      zipCode
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetActionsLogHistory($id: ID!) {
  getActionsLogHistory(id: $id) {
    id
    message
    type
    username
    actionslistID
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListActionsLogHistories(
  $filter: ModelActionsLogHistoryFilterInput
  $limit: Int
  $nextToken: String
) {
  listActionsLogHistories(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      message
      type
      username
      actionslistID
      createdBy
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncActionsLogHistories(
  $filter: ModelActionsLogHistoryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncActionsLogHistories(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      message
      type
      username
      actionslistID
      createdBy
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ActionsLogHistoriesByActionslistID(
  $actionslistID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelActionsLogHistoryFilterInput
  $limit: Int
  $nextToken: String
) {
  actionsLogHistoriesByActionslistID(
    actionslistID: $actionslistID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      message
      type
      username
      actionslistID
      createdBy
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetActionsList($id: ID!) {
  getActionsList(id: $id) {
    id
    actionsLogHistories {
      nextToken
      startedAt
    }
    actionId
    actionData
    taskId
    taskDesciption
    searchTerm
    createdBy
    roundId
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListActionsLists(
  $filter: ModelActionsListFilterInput
  $limit: Int
  $nextToken: String
) {
  listActionsLists(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      actionId
      actionData
      taskId
      taskDesciption
      searchTerm
      createdBy
      roundId
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncActionsLists(
  $filter: ModelActionsListFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncActionsLists(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      actionId
      actionData
      taskId
      taskDesciption
      searchTerm
      createdBy
      roundId
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetIssuesLogHistory($id: ID!) {
  getIssuesLogHistory(id: $id) {
    id
    message
    type
    username
    issueslistID
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListIssuesLogHistories(
  $filter: ModelIssuesLogHistoryFilterInput
  $limit: Int
  $nextToken: String
) {
  listIssuesLogHistories(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      message
      type
      username
      issueslistID
      createdBy
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncIssuesLogHistories(
  $filter: ModelIssuesLogHistoryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncIssuesLogHistories(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      message
      type
      username
      issueslistID
      createdBy
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query IssuesLogHistoriesByIssueslistID(
  $issueslistID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelIssuesLogHistoryFilterInput
  $limit: Int
  $nextToken: String
) {
  issuesLogHistoriesByIssueslistID(
    issueslistID: $issueslistID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      message
      type
      username
      issueslistID
      createdBy
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetIssuesList($id: ID!) {
  getIssuesList(id: $id) {
    id
    issuesLogHistories {
      nextToken
      startedAt
    }
    issueId
    issueData
    taskId
    taskDesciption
    notificationNumber
    searchTerm
    createdBy
    roundId
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListIssuesLists(
  $filter: ModelIssuesListFilterInput
  $limit: Int
  $nextToken: String
) {
  listIssuesLists(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      issueId
      issueData
      taskId
      taskDesciption
      notificationNumber
      searchTerm
      createdBy
      roundId
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncIssuesLists(
  $filter: ModelIssuesListFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncIssuesLists(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      issueId
      issueData
      taskId
      taskDesciption
      notificationNumber
      searchTerm
      createdBy
      roundId
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetUnitMeasument($id: ID!) {
  getUnitMeasument(id: $id) {
    id
    description
    symbol
    isDefault
    isDeleted
    unitlistID
    searchTerm
    unitList {
      id
      name
      isDeleted
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    isActive
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListUnitMeasuments(
  $filter: ModelUnitMeasumentFilterInput
  $limit: Int
  $nextToken: String
) {
  listUnitMeasuments(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      description
      symbol
      isDefault
      isDeleted
      unitlistID
      searchTerm
      isActive
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncUnitMeasuments(
  $filter: ModelUnitMeasumentFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUnitMeasuments(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      description
      symbol
      isDefault
      isDeleted
      unitlistID
      searchTerm
      isActive
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query UnitMeasumentsByUnitlistID(
  $unitlistID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelUnitMeasumentFilterInput
  $limit: Int
  $nextToken: String
) {
  unitMeasumentsByUnitlistID(
    unitlistID: $unitlistID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      description
      symbol
      isDefault
      isDeleted
      unitlistID
      searchTerm
      isActive
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetUnitList($id: ID!) {
  getUnitList(id: $id) {
    id
    name
    isDeleted
    unitMeasuments {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListUnitLists(
  $filter: ModelUnitListFilterInput
  $limit: Int
  $nextToken: String
) {
  listUnitLists(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      isDeleted
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncUnitLists(
  $filter: ModelUnitListFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUnitLists(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      isDeleted
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetAssets($id: ID!) {
  getAssets(id: $id) {
    id
    name
    description
    model
    parentType
    parentId
    assetsId
    image
    searchTerm
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListAssets(
  $filter: ModelAssetsFilterInput
  $limit: Int
  $nextToken: String
) {
  listAssets(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      description
      model
      parentType
      parentId
      assetsId
      image
      searchTerm
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncAssets(
  $filter: ModelAssetsFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncAssets(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      description
      model
      parentType
      parentId
      assetsId
      image
      searchTerm
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetLocation($id: ID!) {
  getLocation(id: $id) {
    id
    name
    description
    model
    locationId
    parentId
    image
    searchTerm
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListLocations(
  $filter: ModelLocationFilterInput
  $limit: Int
  $nextToken: String
) {
  listLocations(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      description
      model
      locationId
      parentId
      image
      searchTerm
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncLocations(
  $filter: ModelLocationFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncLocations(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      description
      model
      locationId
      parentId
      image
      searchTerm
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetRoundPlanSubmissionDetails($id: ID!) {
  getRoundPlanSubmissionDetails(id: $id) {
    id
    formData
    formsubmissionlistID
    flatHierarchy
    createdBy
    assignedBy
    status
    formdetailID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListRoundPlanSubmissionDetails(
  $filter: ModelRoundPlanSubmissionDetailsFilterInput
  $limit: Int
  $nextToken: String
) {
  listRoundPlanSubmissionDetails(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      formData
      formsubmissionlistID
      flatHierarchy
      createdBy
      assignedBy
      status
      formdetailID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncRoundPlanSubmissionDetails(
  $filter: ModelRoundPlanSubmissionDetailsFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncRoundPlanSubmissionDetails(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      formData
      formsubmissionlistID
      flatHierarchy
      createdBy
      assignedBy
      status
      formdetailID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query RoundPlanSubmissionDetailsByFormsubmissionlistID(
  $formsubmissionlistID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelRoundPlanSubmissionDetailsFilterInput
  $limit: Int
  $nextToken: String
) {
  roundPlanSubmissionDetailsByFormsubmissionlistID(
    formsubmissionlistID: $formsubmissionlistID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      formData
      formsubmissionlistID
      flatHierarchy
      createdBy
      assignedBy
      status
      formdetailID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query RoundPlanSubmissionDetailsByFormdetailID(
  $formdetailID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelRoundPlanSubmissionDetailsFilterInput
  $limit: Int
  $nextToken: String
) {
  roundPlanSubmissionDetailsByFormdetailID(
    formdetailID: $formdetailID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      formData
      formsubmissionlistID
      flatHierarchy
      createdBy
      assignedBy
      status
      formdetailID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetRoundPlanSubmissionList($id: ID!) {
  getRoundPlanSubmissionList(id: $id) {
    id
    name
    description
    formLogo
    isPublic
    location
    roundType
    status
    assignee
    dueDate
    version
    submittedBy
    searchTerm
    roundPlanSubmissionDetails {
      nextToken
      startedAt
    }
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListRoundPlanSubmissionLists(
  $filter: ModelRoundPlanSubmissionListFilterInput
  $limit: Int
  $nextToken: String
) {
  listRoundPlanSubmissionLists(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      name
      description
      formLogo
      isPublic
      location
      roundType
      status
      assignee
      dueDate
      version
      submittedBy
      searchTerm
      createdBy
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncRoundPlanSubmissionLists(
  $filter: ModelRoundPlanSubmissionListFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncRoundPlanSubmissionLists(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      description
      formLogo
      isPublic
      location
      roundType
      status
      assignee
      dueDate
      version
      submittedBy
      searchTerm
      createdBy
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetAuthoredRoundPlanDetail($id: ID!) {
  getAuthoredRoundPlanDetail(id: $id) {
    id
    formStatus
    version
    pages
    counter
    formDetailPublishStatus
    formlistID
    subForms
    hierarchy
    flatHierarchy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListAuthoredRoundPlanDetails(
  $filter: ModelAuthoredRoundPlanDetailFilterInput
  $limit: Int
  $nextToken: String
) {
  listAuthoredRoundPlanDetails(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      formStatus
      version
      pages
      counter
      formDetailPublishStatus
      formlistID
      subForms
      hierarchy
      flatHierarchy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncAuthoredRoundPlanDetails(
  $filter: ModelAuthoredRoundPlanDetailFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncAuthoredRoundPlanDetails(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      formStatus
      version
      pages
      counter
      formDetailPublishStatus
      formlistID
      subForms
      hierarchy
      flatHierarchy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query AuthoredRoundPlanDetailsByFormlistID(
  $formlistID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelAuthoredRoundPlanDetailFilterInput
  $limit: Int
  $nextToken: String
) {
  authoredRoundPlanDetailsByFormlistID(
    formlistID: $formlistID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      formStatus
      version
      pages
      counter
      formDetailPublishStatus
      formlistID
      subForms
      hierarchy
      flatHierarchy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetRoundPlanDetail($id: ID!) {
  getRoundPlanDetail(id: $id) {
    id
    formData
    flatHierarchy
    formlistID
    scheduledAt
    scheduledType
    dueDate
    createdBy
    assignedBy
    assignedTo
    roundPlanSubmissionDetails {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListRoundPlanDetails(
  $filter: ModelRoundPlanDetailFilterInput
  $limit: Int
  $nextToken: String
) {
  listRoundPlanDetails(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      formData
      flatHierarchy
      formlistID
      scheduledAt
      scheduledType
      dueDate
      createdBy
      assignedBy
      assignedTo
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncRoundPlanDetails(
  $filter: ModelRoundPlanDetailFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncRoundPlanDetails(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      formData
      flatHierarchy
      formlistID
      scheduledAt
      scheduledType
      dueDate
      createdBy
      assignedBy
      assignedTo
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query RoundPlanDetailsByFormlistID(
  $formlistID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelRoundPlanDetailFilterInput
  $limit: Int
  $nextToken: String
) {
  roundPlanDetailsByFormlistID(
    formlistID: $formlistID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      formData
      flatHierarchy
      formlistID
      scheduledAt
      scheduledType
      dueDate
      createdBy
      assignedBy
      assignedTo
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetRoundPlanList($id: ID!) {
  getRoundPlanList(id: $id) {
    id
    name
    description
    formLogo
    isPublic
    publishedDate
    location
    roundType
    formStatus
    assignee
    tags
    lastPublishedBy
    author
    isArchived
    formType
    isArchivedAt
    authoredRoundPlanDetails {
      nextToken
      startedAt
    }
    roundPlanDetails {
      nextToken
      startedAt
    }
    isDeleted
    searchTerm
    createdBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListRoundPlanLists(
  $filter: ModelRoundPlanListFilterInput
  $limit: Int
  $nextToken: String
) {
  listRoundPlanLists(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      description
      formLogo
      isPublic
      publishedDate
      location
      roundType
      formStatus
      assignee
      tags
      lastPublishedBy
      author
      isArchived
      formType
      isArchivedAt
      isDeleted
      searchTerm
      createdBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncRoundPlanLists(
  $filter: ModelRoundPlanListFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncRoundPlanLists(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      description
      formLogo
      isPublic
      publishedDate
      location
      roundType
      formStatus
      assignee
      tags
      lastPublishedBy
      author
      isArchived
      formType
      isArchivedAt
      isDeleted
      searchTerm
      createdBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetResponseSet($id: ID!) {
  getResponseSet(id: $id) {
    id
    type
    name
    description
    isMultiColumn
    values
    createdBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListResponseSets(
  $filter: ModelResponseSetFilterInput
  $limit: Int
  $nextToken: String
) {
  listResponseSets(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      type
      name
      description
      isMultiColumn
      values
      createdBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncResponseSets(
  $filter: ModelResponseSetFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncResponseSets(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      type
      name
      description
      isMultiColumn
      values
      createdBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetFormSubmissionDetail($id: ID!) {
  getFormSubmissionDetail(id: $id) {
    id
    formData
    formsubmissionlistID
    createdBy
    assignedBy
    formdetailID
    status
    flatHierarchy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListFormSubmissionDetails(
  $filter: ModelFormSubmissionDetailFilterInput
  $limit: Int
  $nextToken: String
) {
  listFormSubmissionDetails(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      formData
      formsubmissionlistID
      createdBy
      assignedBy
      formdetailID
      status
      flatHierarchy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncFormSubmissionDetails(
  $filter: ModelFormSubmissionDetailFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncFormSubmissionDetails(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      formData
      formsubmissionlistID
      createdBy
      assignedBy
      formdetailID
      status
      flatHierarchy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query FormSubmissionDetailsByFormsubmissionlistID(
  $formsubmissionlistID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelFormSubmissionDetailFilterInput
  $limit: Int
  $nextToken: String
) {
  formSubmissionDetailsByFormsubmissionlistID(
    formsubmissionlistID: $formsubmissionlistID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      formData
      formsubmissionlistID
      createdBy
      assignedBy
      formdetailID
      status
      flatHierarchy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query FormSubmissionDetailsByFormdetailID(
  $formdetailID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelFormSubmissionDetailFilterInput
  $limit: Int
  $nextToken: String
) {
  formSubmissionDetailsByFormdetailID(
    formdetailID: $formdetailID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      formData
      formsubmissionlistID
      createdBy
      assignedBy
      formdetailID
      status
      flatHierarchy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetAuthoredFormDetail($id: ID!) {
  getAuthoredFormDetail(id: $id) {
    id
    formStatus
    version
    pages
    counter
    formDetailPublishStatus
    formlistID
    subForms
    hierarchy
    flatHierarchy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListAuthoredFormDetails(
  $filter: ModelAuthoredFormDetailFilterInput
  $limit: Int
  $nextToken: String
) {
  listAuthoredFormDetails(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      formStatus
      version
      pages
      counter
      formDetailPublishStatus
      formlistID
      subForms
      hierarchy
      flatHierarchy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncAuthoredFormDetails(
  $filter: ModelAuthoredFormDetailFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncAuthoredFormDetails(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      formStatus
      version
      pages
      counter
      formDetailPublishStatus
      formlistID
      subForms
      hierarchy
      flatHierarchy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query AuthoredFormDetailsByFormlistID(
  $formlistID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelAuthoredFormDetailFilterInput
  $limit: Int
  $nextToken: String
) {
  authoredFormDetailsByFormlistID(
    formlistID: $formlistID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      formStatus
      version
      pages
      counter
      formDetailPublishStatus
      formlistID
      subForms
      hierarchy
      flatHierarchy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetFormSubmissionList($id: ID!) {
  getFormSubmissionList(id: $id) {
    id
    name
    description
    formLogo
    isPublic
    location
    roundType
    status
    assignee
    dueDate
    version
    submittedBy
    searchTerm
    formSubmissionListFormSubmissionDetail {
      nextToken
      startedAt
    }
    createdBy
    assignedBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListFormSubmissionLists(
  $filter: ModelFormSubmissionListFilterInput
  $limit: Int
  $nextToken: String
) {
  listFormSubmissionLists(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      name
      description
      formLogo
      isPublic
      location
      roundType
      status
      assignee
      dueDate
      version
      submittedBy
      searchTerm
      createdBy
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncFormSubmissionLists(
  $filter: ModelFormSubmissionListFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncFormSubmissionLists(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      description
      formLogo
      isPublic
      location
      roundType
      status
      assignee
      dueDate
      version
      submittedBy
      searchTerm
      createdBy
      assignedBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetFormList($id: ID!) {
  getFormList(id: $id) {
    id
    name
    description
    formLogo
    isPublic
    publishedDate
    location
    roundType
    formStatus
    assignee
    tags
    lastPublishedBy
    author
    formType
    isArchived
    searchTerm
    isArchivedAt
    formListAuthoredFormDetail {
      nextToken
      startedAt
    }
    formListFormDetail {
      nextToken
      startedAt
    }
    isDeleted
    createdBy
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListFormLists(
  $filter: ModelFormListFilterInput
  $limit: Int
  $nextToken: String
) {
  listFormLists(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      description
      formLogo
      isPublic
      publishedDate
      location
      roundType
      formStatus
      assignee
      tags
      lastPublishedBy
      author
      formType
      isArchived
      searchTerm
      isArchivedAt
      isDeleted
      createdBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncFormLists(
  $filter: ModelFormListFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncFormLists(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      description
      formLogo
      isPublic
      publishedDate
      location
      roundType
      formStatus
      assignee
      tags
      lastPublishedBy
      author
      formType
      isArchived
      searchTerm
      isArchivedAt
      isDeleted
      createdBy
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetFormDetail($id: ID!) {
  getFormDetail(id: $id) {
    id
    formData
    formlistID
    createdBy
    assignedBy
    flatHierarchy
    scheduledAt
    scheduledType
    dueDate
    assignedTo
    formSubmissionDetail {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListFormDetails(
  $filter: ModelFormDetailFilterInput
  $limit: Int
  $nextToken: String
) {
  listFormDetails(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      formData
      formlistID
      createdBy
      assignedBy
      flatHierarchy
      scheduledAt
      scheduledType
      dueDate
      assignedTo
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncFormDetails(
  $filter: ModelFormDetailFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncFormDetails(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      formData
      formlistID
      createdBy
      assignedBy
      flatHierarchy
      scheduledAt
      scheduledType
      dueDate
      assignedTo
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query FormDetailsByFormlistID(
  $formlistID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelFormDetailFilterInput
  $limit: Int
  $nextToken: String
) {
  formDetailsByFormlistID(
    formlistID: $formlistID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      formData
      formlistID
      createdBy
      assignedBy
      flatHierarchy
      scheduledAt
      scheduledType
      dueDate
      assignedTo
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
