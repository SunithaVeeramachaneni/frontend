type FormDetail @model @auth(rules: [{allow: public}]) {
  id: ID!
  formData: String
  formlistID: ID! @index(name: "byFormList")
}

type AuthoredFormDetail @model @auth(rules: [{allow: public}]) {
  id: ID!
  formStatus: FormStatusEnum
  version: String
  pages: String
  counter: Int
  formlistID: ID! @index(name: "byFormList")
}

type FormSubmissionDetail @model @auth(rules: [{allow: public}]) {
  id: ID!
  formData: String
  formsubmissionlistID: ID! @index(name: "byFormSubmissionList")
  formlistID: ID! @index(name: "byFormList")
}

type FormSubmissionList @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  formLogo: String
  isPublic: Boolean
  location: String
  roundType: String
  status: String
  assignee: String
  dueDate: String
  version: String
  submittedBy: String
  FormSubmissionListFormSubmissionDetail: [FormSubmissionDetail] @hasMany(indexName: "byFormSubmissionList", fields: ["id"])
}

type FormList @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  formLogo: String
  isPublic: Boolean
  publishedDate: String
  location: String
  roundType: String
  formStatus: String
  assignee: String
  tags: [String]
  lastPublishedBy: String
  author: String
  formType: String
  FormListFormSubmissionDetail: [FormSubmissionDetail] @hasMany(indexName: "byFormList", fields: ["id"])
  FormListAuthoredFormDetail: [AuthoredFormDetail] @hasMany(indexName: "byFormList", fields: ["id"])
  FormListFormDetail: [FormDetail] @hasMany(indexName: "byFormList", fields: ["id"])
}

enum FormStatusEnum {
  DRAFT
  PUBLISHED
}
 