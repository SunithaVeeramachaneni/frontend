type FormSubmissionDetail @model @auth(rules: [{allow: public}]) {
  id: ID!
  formData: String
  formSubmissionDetailId: FormSubmissions @belongsTo
  formsubmissionsID: ID! @index(name: "byFormSubmissions")
}

type FormDetail @model @auth(rules: [{allow: public}]) {
  id: ID!
  formData: String
  formlistID: ID! @index(name: "byFormList")
}

type AuthoredFormDetail @model @auth(rules: [{allow: public}]) {
  id: ID!
  version: String
  formStatus: FormStatusEnum
  counter: Int
  pages: String
  formlistID: ID! @index(name: "byFormList")
  formList: FormList @belongsTo(fields: ["formlistID"])
}

type FormSubmissions @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  formLogo: String
  isPublic: Boolean
  location: String
  roundType: String
  status: String
  assignee: String
  dueDate: String
  version: String
  submittedBy: String
  formListId: FormList @belongsTo
  formlistID: ID! @index(name: "byFormList")
  formSubmissionDetails: [FormSubmissionDetail] @hasMany(indexName: "byFormSubmissions", fields: ["id"])
}

type FormList @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  formLogo: String
  isPublic: Boolean
  publishedDate: String
  location: String
  roundType: String
  formStatus: String
  assignee: String
  tags: [String]
  lastPublishedBy: String
  author: String
  formType: String
  formDetails: [FormDetail] @hasMany(indexName: "byFormList", fields: ["id"])
  formSubmissions: [FormSubmissions] @hasMany(indexName: "byFormList", fields: ["id"])
  authoredFormDetails: [AuthoredFormDetail] @hasMany(indexName: "byFormList", fields: ["id"])
}

type FormsMetaData @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  formLogo: String
  isPublic: Boolean
  isArchived: Boolean
  tags: [AWSJSON]
  formStatus: FormStatusEnum
  createdBy: String
  updatedBy: String
}

type FormsJSON @model @auth(rules: [{allow: public}]) {
  id: ID!
  pages: [AWSJSON!]
  formId: String
}

enum FormStatusEnum {
  DRAFT
  PUBLISHED
}
 